__author__ = "5184262: Dominik Ploner"
import decimal
from decimal import *

#  Defining and naming the variables to prevent NameError
grade = float(0.0)
grade_new = float(0.0)
pregrade = float(0.0)
gender = str("w")
height = int(0)

#  User input
student = input("--> ")

#  Trying to keep a lid on possible errors. Here: slicing to analyze the
#  individual bits.
if float(student[0:3]) >= float(1.0) and float(student[0:3]) < float(100.0):
    pass
else:
    print("ERROR")
    raise SystemExit

#  If a student is larger than the intervall's ending -> ERROR
if int(student[6:9]) < int(301):
    pass
else:
    print("ERROR")
    raise SystemExit

#  Slicing the input into 3 parts and assigning data types
pregrade = float(student[0:3])
gender = str(student[4])  #  Technically superfluous but it helps me
height = int(student[6:9])

#  Fail condition of the whole programme
if height < 100 or height > 300:
    print("ERROR")
    raise SystemExit
else:
    pass

#  gender is fixed, making it easy to assign values. w is only relevant value.
if gender == "w":
    grade = pregrade - 0.4
else:
    grade = pregrade

#  height has its possible parameters [100:301]
#  and only relevant from including 181 upwards
if height <= 180:
    grade_new = grade
elif height > 180:
    grade_new = (height - 180) * 0.05 + grade


#  Setting of "exceptional grades". 0.Xs are 1.0; everything with "> 4.0"
#  is "failed" and is set to 5.0
if grade_new <= 1.15:
    grade_new = 1.0
elif grade_new > 4.0:
    grade_new = 5.0
# If condition for individual grades
elif 1.15 < grade_new <= 1.5:
    grade_new = 1.3
elif 1.5 < grade_new <= 1.85:
    grade_new = 1.7
elif 1.85 < grade_new <= 2.15:
    grade_new = 2.0
elif 2.15 < grade_new <= 2.5:
    grade_new = 2.3
elif 2.5 < grade_new <= 2.85:
    grade_new = 2.7
elif 2.85 < grade_new <= 3.15:
    grade_new = 3.0
elif 3.15 < grade_new <= 3.5:
    grade_new = 3.3
elif 3.5 < grade_new <= 3.85:
    grade_new = 3.7
elif 3.85 < grade_new <= 4.0:
    grade_new = 4.0


getcontext().prec = 3
Decimal(grade_new)
print(grade_new)
